/*
요구사항
유치원을 하려고 하는데, 아이들이 체험학습 프로그램을 신청해야 합니다.
아이들 정보는 이름, 나이, 성별이 필요하고 학부모는 이름, 나이, 주소, 전화번호, 성별이 필요해요.
체험학습은 체험학습 제목, 체험학습 내용, 이벤트 이미지 여러 장이 필요합니다.
아이들은 여러 번 체험학습에 등록할 수 있어요.
*/

CREATE TABLE TBL_CHILD(
   ID NUMBER CONSTRAINT PK_CHILD PRIMARY KEY,
   CHILD_NAME VARCHAR2(255) NOT NULL,
   CHILD_AGE NUMBER NOT NULL,
   CHILD_GENDER VARCHAR2(255) DEFAULT 'N',
   PARENT_ID NUMBER,
   CONSTRAINT FK_CHILD_PARENT FOREIGN KEY(PARENT_ID)
   REFERENCES TBL_PARENT(ID)
);

CREATE TABLE TBL_PARENT(
   ID NUMBER CONSTRAINT PK_PARENT PRIMARY KEY,
   PARENT_NAME VARCHAR2(1000) NOT NULL,
   PARENT_AGE NUMBER,
   PARENT_GENDER VARCHAR2(1000) NOT NULL,
   PARENT_PHONE VARCHAR2(1000) NOT NULL UNIQUE,
   PARENT_ADDRESS VARCHAR2(1000) DEFAULT 'N' UNIQUE
);

CREATE TABLE TBL_FIELD_TRIP(
   ID NUMBER CONSTRAINT PK_FIELD_TRIP PRIMARY KEY,
   FIELD_TRIP_TITLE VARCHAR2(255) NOT NULL UNIQUE,
   FIELD_TRIP_CONTENTS VARCHAR2(2000) NOT NULL
);

CREATE TABLE TBL_FILE(
	ID NUMBER CONSTRAINT PK_FILE PRIMARY KEY,
	FILE_ORIGINAL_NAME VARCHAR2(1000) NOT NULL,
	FILE_SYSTEM_NAME VARCHAR2(1000) NOT NULL,
	FILE_POSITION VARCHAR2(100),
	FIELD_TRIP_ID NUMBER,
	CONSTRAINT FK_FILE_FIELD_TRIP FOREIGN KEY(FIELD_TRIP_ID)
	REFERENCES TBL_FIELD_TRIP(ID)
);

CREATE TABLE TBL_APPLY(
   ID NUMBER CONSTRAINT PK_APPLY PRIMARY KEY,
   CHILD_ID NUMBER,
   FIELD_TRIP_ID NUMBER,
   CONSTRAINT FK_APPLY_CHILD FOREIGN KEY (CHILD_ID)
   REFERENCES TBL_CHILD(ID),
   CONSTRAINT FK_APPLY_FIELD_TRIP FOREIGN KEY (FIELD_TRIP_ID)
   REFERENCES TBL_FIELD_TRIP(ID)
   );


/*
요구사항
안녕하세요, 광고 회사를 운영하려고 준비중인 사업가입니다.
광고주는 기업이고 기업 정보는 이름, 주소, 대표번호, 기업종류(스타트업, 중소기업, 중견기업, 대기업)입니다.
광고는 제목, 내용이 있고 기업은 여러 광고를 신청할 수 있습니다.
기업이 광고를 선택할 때에는 카테고리로 선택하며, 대카테고리, 중카테고리, 소카테고리가 있습니다.
*/


CREATE TABLE TBL_ENTERPRISE(
   ID NUMBER CONSTRAINT PK_ENTERPRISE PRIMARY KEY,
   ENTERPRISE_NAME VARCHAR2(255) NOT NULL,
   ENTERPRISE_TEL VARCHAR2(255) NOT NULL UNIQUE,
   ENTERPRISE_ADDRESS VARCHAR2(1000) UNIQUE,
   ENTERPRISE_KIND VARCHAR2(255) CONSTRAINT BEN_KIND 
   CHECK(ENTERPRISE_KIND IN('스타트업', '중소기업', '중견기업', '대기업'))
);

CREATE TABLE TBL_AD(
   ID NUMBER CONSTRAINT PK_AD PRIMARY KEY,
   AD_TITLE VARCHAR2(255) NOT NULL,
   AD_CONTENTS VARCHAR2(1000) NOT NULL,
   CATEGORY_C_ID NUMBER NOT NULL,
   CONSTRAINT FK_AD_CATEGORY_C FOREIGN KEY(CATEGORY_C_ID)
   REFERENCES TBL_CATEGORY_C(ID)
);

CREATE TABLE TBL_CONTRACT(
	ID NUMBER CONSTRAINT PK_CONTRACT PRIMARY KEY,
	ENTERPRISE_ID NUMBER,
	AD_ID NUMBER,
	CONSTRAINT FK_CONTRACT_ENTERPRISE FOREIGN KEY(ENTERPRISE_ID)
	REFERENCES TBL_ENTERPRISE(ID),
	CONSTRAINT FK_CONTRACT_AD FOREIGN KEY(AD_ID)
	REFERENCES TBL_AD(ID)
);

CREATE TABLE TBL_CATEGORY_A(
   ID NUMBER CONSTRAINT PK_CATEGORY_A PRIMARY KEY,
   CATEGORY_A_NAME VARCHAR2(255) NOT NULL UNIQUE
);

CREATE TABLE TBL_CATEGORY_B(
   ID NUMBER CONSTRAINT PK_CATEGORY_B PRIMARY KEY,
   CATEGORY_B_NAME VARCHAR2(1000) NOT NULL UNIQUE,
   CATEGORY_A_ID NUMBER,
   CONSTRAINT FK_CATEGORY_B_CATEGORY_A FOREIGN KEY(CATEGORY_A_ID)
   REFERENCES TBL_CATEGORY_A(ID)
);

CREATE TABLE TBL_CATEGORY_C(
   ID NUMBER CONSTRAINT PK_CATEGORY_C PRIMARY KEY,
   CATEGORY_C_NAME VARCHAR2(1000)NOT NULL UNIQUE,
   CATEGORY_B_ID NUMBER,
   CONSTRAINT FK_CATEGORY_C_CATEGORY_B FOREIGN KEY(CATEGORY_B_ID)
   REFERENCES TBL_CATEGORY_B(ID)
);



/*
요구사항
음료수 판매 업체입니다. 음료수마다 당첨번호가 있습니다. 
음료수의 당첨번호는 1개이고 당첨자의 정보를 알아야 상품을 배송할 수 있습니다.
당첨 번호마다 당첨 상품이 있고, 당첨 상품이 배송 중인지 배송 완료인지 구분해야 합니다.
*/

CREATE TABLE TBL_DRINK(
	ID NUMBER CONSTRAINT PK_DRINK PRIMARY KEY,
	DRINK_NAME VARCHAR2(1000) NOT NULL UNIQUE,
	DRINK_PRICE NUMBER DEFAULT 0,
	LOTTERY_ID NUMBER DEFAULT 0 NOT NULL,
	CONSTRAINT FK_DRINK_LOTTERY FOREIGN KEY(LOTTERY_ID)
	REFERENCES TBL_LOTTERY(ID)
);

CREATE TABLE TBL_LOTTERY(
	ID NUMBER CONSTRAINT PK_LOTTERY PRIMARY KEY,
	PRODUCT_ID NUMBER NOT NULL,
	CONSTRAINT LOTTERY_PRODUCT FOREIGN KEY(PRODUCT_ID)
	REFERENCES TBL_PRODUCT(ID)
);

CREATE TABLE TBL_PRODUCT(
	ID NUMBER CONSTRAINT PK_PRODUCT PRIMARY KEY,
	PRODUCT_NAME VARCHAR2(1000) NOT NULL,
	PRODUCT_NUMBER VARCHAR2(1000) NOT NULL UNIQUE
);

CREATE TABLE TBL_CUSTOMER(
	ID NUMBER CONSTRAINT PK_CUSTOMER PRIMARY KEY,
	CUSTOMER_NAME VARCHAR2(1000) NOT NULL,
	CUSTOMER_PHONE VARCHAR2(1000) NOT NULL,
	CUSTOMER_ADDRESS VARCHAR2(1000) NOT NULL
);

CREATE TABLE TBL_DELIVERY(
	ID NUMBER CONSTRAINT PK_DELIVERY PRIMARY KEY,
	DELIVERY_STATUS VARCHAR2(1000) DEFAULT 'READY' NOT NULL,
	CUSTOMER_ID NUMBER,
	PRODUCT_ID NUMBER,
	CONSTRAINT DELIVERY_CUSTOMER FOREIGN KEY(CUSTOMER_ID)
	REFERENCES TBL_CUSTOMER(ID),
	CONSTRAINT DELIVERY_PRODUCT FOREIGN KEY(PRODUCT_ID)
	REFERENCES TBL_PRODUCT(ID)
);

CREATE TABLE TBL_SUPPLY_STORE(
	ID NUMBER CONSTRAINT PK_SUPPLY PRIMARY KEY,
	SUPPLY_STORE_NAME VARCHAR2(1000),
	SUPPLY_STORE_LOCATION VARCHAR2(1000)
);

CREATE TABLE TBL_DISTRIBUTION(
	ID NUMBER CONSTRAINT PK_DISTRIBUTION PRIMARY KEY,
	DRINK_ID NUMBER,
	SUPPLY_STORE_ID NUMBER,
	CONSTRAINT DISTRIBUTION_DRINK FOREIGN KEY(DRINK_ID)
	REFERENCES TBL_DRINK(ID),
	CONSTRAINT DISTRIBUTION_SUPPLY_STORE FOREIGN KEY(SUPPLY_STORE_ID)
	REFERENCES TBL_SUPPLY_STORE(ID)
);

/*
요구사항
이커머스 창업 준비중입니다. 기업과 사용자 간 거래를 위해 기업의 정보와 사용자 정보가 필요합니다.
기업의 정보는 기업 이름, 주소, 대표번호가 있고
사용자 정보는 이름, 주소, 전화번호가 있습니다. 
결제 시 사용자 정보와 기업의 정보, 결제한 카드의 정보 모두 필요하며, 상품의 정보도 필요합니다. 
상품의 정보는 이름, 가격, 재고입니다.
사용자는 등록한 카드의 정보를 저장할 수 있으며, 
카드의 정보는 카드번호, 카드사, 회원 정보가 필요합니다.
*/

/*
기업		사용자		상품		등록카드		결제	
이름		이름			이름		카드번호		사용자fk		
주소		주소			가격		카드사		기업fk		
대표번호	전화번호		재고		회원정보fk	카드fk
										상품fk
*/

CREATE TABLE TBL_COMPANY(
	ID NUMBER CONSTRAINT PK_COMPANY PRIMARY KEY,
	COMPANY_NAME VARCHAR2(255) NOT NULL,
	COMPANY_ADDRESS VARCHAR2(1000),
	COMPANY_TEL VARCHAR2(1000)
);

CREATE TABLE TBL_USER(
	ID NUMBER CONSTRAINT PK_USER PRIMARY KEY,
	USER_NAME VARCHAR2(255) NOT NULL,
	USER_ADDRESS VARCHAR2(1000),
	USER_PHONE VARCHAR2(1000)
);

CREATE TABLE TBL_MERCHANDISE(
	ID NUMBER CONSTRAINT PK_MERCHANDISE PRIMARY KEY,
	MERCHANDISE_NAME VARCHAR2(500) NOT NULL UNIQUE,
	MERCHANDISE_PRICE NUMBER DEFAULT 0 NOT NULL,
	MERCHANDISE_STOCK NUMBER DEFAULT 0,
	COMPANY_ID NUMBER,
	CONSTRAINT FK_MERCHANDISE_COMPANY FOREIGN KEY(COMPANY_ID)
	REFERENCES TBL_COMPANY(ID)
);

CREATE TABLE TBL_CARD(
	ID NUMBER CONSTRAINT PK_CARD PRIMARY KEY,
	CARD_COMPANY VARCHAR2(255) NOT NULL,
	CARD_NUMBER NUMBER NOT NULL UNIQUE,
	CARD_USER_ID NUMBER NOT NULL,
	CONSTRAINT FK_CARD_CARD_USER FOREIGN KEY(CARD_USER_ID)
	REFERENCES TBL_CARD_USER(ID)
);

CREATE TABLE TBL_CARD_USER(
	ID NUMBER CONSTRAINT PK_CARD_USER PRIMARY KEY,
	CARD_USER_NAME VARCHAR2(1000) NOT NULL,
	CARD_USER_BIRTH DATE,
	CARD_USER_PHONE VARCHAR2(1000) NOT NULL UNIQUE,
	CARD_USER_ADDRESS VARCHAR2(1000) NOT NULL UNIQUE,
	CARD_USER_ACCOUNT VARCHAR2(1000) NOT NULL UNIQUE,
	CARD_USER_JOB VARCHAR2(1000)
);

CREATE TABLE TBL_ORDER(
	ID NUMBER CONSTRAINT PK_ORDER PRIMARY KEY,
	ORDER_DATE DATE DEFAULT CURRENT_TIMESTAMP,
	USER_ID NUMBER,
	CONSTRAINT FK_ORDER_USER FOREIGN KEY(USER_ID)
	REFERENCES TBL_USER(ID)
);

CREATE TABLE TBL_ORDER_DETAIL(
	ID NUMBER CONSTRAINT PK_ORDER_DETAIL PRIMARY KEY,
	MERCHANDISE_COUNT NUMBER DEFAULT 1,
	ORDER_ID NUMBER,
	MERCHANDISE_ID NUMBER,
	CONSTRAINT FK_ORDER_DETAIL_ORDER FOREIGN KEY(ORDER_ID)
	REFERENCES TBL_ORDER(ID),
	CONSTRAINT FK_ORDER_DETAIL_MERCHANDISE FOREIGN KEY(MERCHANDISE_ID)
	REFERENCES TBL_MERCHANDISE(ID)
);

CREATE TABLE TBL_PAY(
	ID NUMBER CONSTRAINT PK_PAY PRIMARY KEY,
	CARD_ID NUMBER NOT NULL,
	ORDER_DETAIL_ID NUMBER NOT NULL,
	CONSTRAINT FK_PAY_CARD FOREIGN KEY(CARD_ID)
	REFERENCES TBL_CARD(ID),
	CONSTRAINT FK_PAY_ORDER_DETAIL FOREIGN KEY(ORDER_DETAIL_ID)
	REFERENCES TBL_ORDER_DETAIL(ID)
);




