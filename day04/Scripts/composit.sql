/*
 * 조합키(복합키)
 * PRIMARY KEY(컬럼명1, 컬럼명2)
 * FOREIGN KEY(컬럼명1, 컬럼명2) REFERENCES 부모테이블명(부모컬럼명1, 부모컬럼명2)
 * */


CREATE TABLE TBL_FLOWER_LANGUAGE(
	FLOWER_ID NUMBER,
	FLOWER_COLOR VARCHAR2(1000),
	FLOWER_LANGUAGE VARCHAR2(1000),
	CONSTRAINT KF_FLOWER_LANGUAGE_FLOWER FOREIGN KEY(FLOWER_ID)
	REFERENCES TBL_FLOWER(ID),
	CONSTRAINT PK_FLOWER_LANGUAGE PRIMARY KEY(FLOWER_ID, FLOWER_COLOR)
);

CREATE TABLE TBL_FLOWER(
	ID NUMBER CONSTRAINT PK_FLOWER PRIMARY KEY,
	FLOWER_NAME VARCHAR2(1000),
	FLOWER_KIND VARCHAR2(1000)
);



/*
 * 슈퍼키: 부모 테이블의 PK
 * 서브키: 자식 테이블의 FK이면서 동시에 PK
 * 
 * 겹치는 컬럼이 존재할 경우, 
 * 부모 테이블에 모아놓고 자식 테이블에서는 FK를 받아서 PK로 설정한다.
 *  
 * */

CREATE TABLE TBL_FILE(
	ID NUMBER CONSTRAINT PK_FILE PRIMARY KEY,
	FILE_NAME VARCHAR2(1000),
	FILE_PATH VARCHAR2(1000),
	FILE_SIZE VARCHAR2(1000)
);

CREATE TABLE TBL_POST_FILE(
	ID NUMBER CONSTRAINT PK_POST_FILE PRIMARY KEY,
	CONSTRAINT FK_POST_FILE_FILE FOREIGN KEY(ID)
	REFERENCES TBL_FILE(ID)
);

CREATE TABLE TBL_MEMBER_FILE(
	ID NUMBER CONSTRAINT PK_MEMBER_FILE PRIMARY KEY,
	CONSTRAINT FK_MEMBER_FILE_FILE FOREIGN KEY(ID)
	REFERENCES TBL_FILE(ID)
);


