/*
   TBL_USER
   -----------------------
   ID : NUMBER PRIMARY KEY
   -----------------------
   USER_ID : VARCHAR2(1000)
   USER_PW : VARCHAR2(1000)
   USER_ADDRESS : VARCHAR2(2000)
   USER_EMAIL : VARCHAR2(2000) : UNIQUE
   USER_BIRTH : DATE
*/

CREATE TABLE TBL_USER(
   ID NUMBER CONSTRAINT PK_USER PRIMARY KEY,
   USER_ID VARCHAR2(1000) UNIQUE NOT NULL,
   USER_PW VARCHAR2(1000) NOT NULL,
   USER_ADDRESS VARCHAR2(1000),
   USER_EMAIL VARCHAR2(1000) UNIQUE NOT NULL,
   USER_BIRTH DATE
);

CREATE TABLE TBL_PRODUCT(
   ID NUMBER CONSTRAINT PK_PRODUCT PRIMARY KEY,
   PRODUCT_NAME VARCHAR2(1000) NOT NULL,
   PRODUCT_PRICE NUMBER DEFAULT 0,
   PRODUCT_STOCK NUMBER DEFAULT 0
);

CREATE TABLE TBL_ORDER(
   ID NUMBER CONSTRAINT PK_ORDER PRIMARY KEY,
   ORDER_DATE DATE DEFAULT CURRENT_TIMESTAMP,
   USER_ID NUMBER,
   PRODUCT_ID NUMBER,
   CONSTRAINT FK_ORDER_USER FOREIGN KEY(USER_ID)
   REFERENCES TBL_USER(ID),
   CONSTRAINT FK_ORDER_PRODUCT FOREIGN KEY(PRODUCT_ID)
   REFERENCES TBL_PRODUCT(ID)
);


/*
 * 요구 사항
 * 커뮤니티 게시판을 만들고 싶어요.
 * 게시판에는 게시글 제목과 게시글 내용, 작성한 시간, 작성자가 있고,
 * 게시글에는 댓글이 있어서 댓글 내용들이 나와야 해요
 * 작성자는 회원(TBL_USER)정보를 그대로 사용해요.
 * 댓글에도 작성자가 필요해요.
 * */

CREATE TABLE TBL_POST(
	ID NUMBER CONSTRAINT PK_POST PRIMARY KEY,
	POST_TITLE VARCHAR2(1000) NOT NULL,
	POST_CONTENTS VARCHAR2(2000) NOT NULL,
	POST_UPLOAD_TIME DATE,
	USER_ID NUMBER,
	CONSTRAINT FK_POST_ID FOREIGN KEY (USER_ID) 
	REFERENCES TBL_USER(ID)
);

/*TBL_REPLY
REPLY_CONTENTS VARCHAR2(2000)
REPLY_WRITER VARCHAR(255) FK*/

CREATE TABLE TBL_REPLY(
	ID NUMBER CONSTRAINT PK_REPLY PRIMARY KEY,
	REPLY_CONTENTS VARCHAR2(2000),
	USER_ID NUMBER,
	POST_ID NUMBER,
	CONSTRAINT FK_REPLY_USER FOREIGN KEY (USER_ID) 
	REFERENCES TBL_USER(ID),
	CONSTRAINT FK_REPLY_POST FOREIGN KEY (POST_ID) 
	REFERENCES TBL_USER(ID)
);

/*요구사항
마이페이지에서 회원 프로필을 구현하고 싶습니다.
회원당 프로필을 여러 개 설정할 수 있고
대표 이미지로 선택된 프로필만 화면에 보여주고 싶습니다.*/

CREATE TABLE TBL_PROFILE(
	ID NUMBER CONSTRAINT PK_PROFILE PRIMARY KEY,
	PROFILE_ORIGINAL_NAME VARCHAR2(1000) NOT NULL,
	PROFILE_SYSTEM_NAME VARCHAR2(1000) NOT NULL,
	PROFILE_MAIN VARCHAR2(1000) DEFAULT 'NONE',
	USER_ID NUMBER,
	CONSTRAINT FK_PROFILE_USER FOREIGN KEY(USER_ID)
	REFERENCES TBL_USER(ID)
);

DROP TABLE TBL_STUDENT;

/*
   1.학사 관리 시스템에서 학생과 교수가 존재
   2.학생은 학번, 이름, 전공, 학년 등
   3.교수는 교수 번호, 이름, 전공, 직위 등
   4.과목은 고유한 과목 번호, 과목명, 학점 등
   6.학생은 여러 개의 과목을 수강가능
   7.교수는 여러 개의 과목을 강의가능
   8.학생이 수강한 과목은 성적이 기록됩니다. 
*/

CREATE TABLE TBL_STUDENT(
	ID NUMBER CONSTRAINT PK_STUDENT PRIMARY KEY,
	STUDENT_ID VARCHAR2(1000) NOT NULL UNIQUE,
	STUDENT_NAME VARCHAR2(1000) NOT NULL,
	STUDENT_GRADE NUMBER NOT NULL CONSTRAINT BEN_STUDENT_GRADE CHECK(STUDENT_GRADE <= '4'),
	STUDENT_MAJOR VARCHAR2(1000) NOT NULL,
	SUBJECT_ID NUMBER,
	CONSTRAINT FK_STUDENT_SUBJECT FOREIGN KEY(SUBJECT_ID)
	REFERENCES TBL_SUBJECT(ID)
);

CREATE TABLE TBL_PROFESSOR(
	ID NUMBER CONSTRAINT PK_PROFESSOR PRIMARY KEY,
	PROFESSOR_ID VARCHAR2(1000) NOT NULL,
	PROFESSOR_NAME VARCHAR2(1000) NOT NULL,
	PROFESSOR_MAJOR VARCHAR2(1000) NOT NULL,
	PROFESSOR_POSITION VARCHAR2(1000),
	SUBJECT_ID NUMBER,
	CONSTRAINT FK_PROFESSOR_SUBJECT FOREIGN KEY(SUBJECT_ID)
	REFERENCES TBL_SUBJECT(ID)
);

CREATE TABLE TBL_SUBJECT(
	ID NUMBER CONSTRAINT PK_SUBJECT PRIMARY KEY,
	SUBJECT_NAME VARCHAR2(1000) NOT NULL UNIQUE,
);

CREATE TABLE TBL_SCORE(
	ID NUMBER CONSTRAINT PK_GRADE PRIMARY KEY,
	SCORE_SCORE VARCHAR2(1000) DEFAULT 'F',
	STUDENT_ID NUMBER,
	SUBJECT_ID NUMBER,
	CONSTRAINT FK_GRADE_SUBJECT FOREIGN KEY(SUBJECT_ID)
	REFERENCES TBL_SUBJECT(ID),
	CONSTRAINT FK_GRADE_STUDENT FOREIGN KEY(STUDENT_ID)
	REFERENCES TBL_STUDENT(ID)
);

/*
 * 요구사항
 * 대 카테고리, 소 카테고리가 필요해요.
 */


/*
 * 요구 사항
 * 회의실 예약 서비스를 제작하고 싶습니다.
 * 회원별로 등급이 존재하고 사무실마다 회의실이 여러 개 있습니다.
 * 회의실 이용 가능 시간은 파트 타임으로서 여러 시간대가 존재합니다.
 * */

CREATE TABLE TBL_MEMBER(
	ID NUMBER CONSTRAINT PK_MEMBER PRIMARY KEY,
	MEMBER_NAME VARCHAR2(1000) NOT NULL,
	MEMBER_LEVEL VARCHAR2(1000) DEFAULT 'BASIC' NOT NULL
);

CREATE TABLE TBL_OFFICE(
	ID NUMBER CONSTRAINT PK_OFFICE PRIMARY KEY,
	OFFICE_NAME VARCHAR2(255) NOT NULL,
	OFFICE_LOCATION VARCHAR2(1000)
);

ALTER TABLE OFFICE RENAME TO TBL_OFFICE;

CREATE TABLE TBL_CONFERENCE_ROOM(
	ID NUMBER CONSTRAINT PK_CONFERENCE_ROOM PRIMARY KEY,
	CONFERENCE_ROOM_NAME VARCHAR2(1000),
	OFFICE_ID NUMBER,
	CONSTRAINT FK_CONFERENCE_ROOM_OFFICE FOREIGN KEY(OFFICE_ID)
	REFERENCES TBL_OFFICE(ID)
);

CREATE TABLE TBL_PART_TIME(
	ID NUMBER CONSTRAINT PK_PART_TIME PRIMARY KEY,
	PART_TIME_START DATE,
	PAR_TIME_END DATE,
	CONFERENCE_ROOM_ID NUMBER,
	CONSTRAINT FK_PART_TIME_CONFERENCE_ROOM FOREIGN KEY(CONFERENCE_ROOM_ID)
	REFERENCES TBL_CONFERENCE_ROOM(ID)
);

CREATE TABLE TBL_RESERVATION(
	ID NUMBER CONSTRAINT PK_RESERVATION PRIMARY KEY,
	MEMBER_ID NUMBER,
	CONFERENCE_ROOM_ID NUMBER,
	CONSTRAINT FK_RESERVATION_MEMBER FOREIGN KEY(MEMBER_ID)
	REFERENCES TBL_MEMBER(ID),
	CONSTRAINT FK_RESERVATION_CONFERENCE_ROOM FOREIGN KEY(CONFERENCE_ROOM_ID)
	REFERENCES TBL_CONFERENCE_ROOM(ID)
);










